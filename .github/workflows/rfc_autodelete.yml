name: RFC Auto Delete Stale Branches

on:
  schedule:
    - cron: "0 2 * * *"   # daily
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Close draft PRs with no progress and delete branch
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            // List open PRs whose head is rfc/*
            const prs = await github.paginate(github.rest.pulls.list, {
              owner, repo, state: 'open', per_page: 100
            });
            const now = Date.now();

            for (const pr of prs) {
              if (!pr.head || !pr.head.ref || !/^rfc\//.test(pr.head.ref)) continue;

              // Consider "not submitted" = still draft + only initial commit + older than 7 days
              if (!pr.draft) continue;

              // commits count
              const commits = await github.paginate(github.rest.pulls.listCommits, {
                owner, repo, pull_number: pr.number, per_page: 100
              });
              const ageDays = (now - new Date(pr.created_at).getTime()) / (1000*60*60*24);

              if (commits.length <= 1 && ageDays >= 7) {
                // Leave a courtesy note then close & delete branch
                await github.rest.issues.createComment({
                  owner, repo, issue_number: pr.number,
                  body: "⏱️ Auto-cleanup: closing stale draft RFC and deleting its branch (no updates in 7+ days). Re-open by recreating from the RFC form."
                });
                await github.rest.pulls.update({ owner, repo, pull_number: pr.number, state: 'closed' });

                // Delete branch
                try {
                  await github.rest.git.deleteRef({ owner, repo, ref: `heads/${pr.head.ref}` });
                } catch (e) {
                  core.warning(`Could not delete ${pr.head.ref}: ${e.message}`);
                }
              }
            }
